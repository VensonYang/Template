<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd" 
		default-lazy-init="true">
		

    <!-- 激活组件扫描功能,在包controller及其子包下面自动扫描通过注解配置的组件 --> 
    <context:component-scan base-package="controller"></context:component-scan>
    
	<!-- 自定义文件上传进度条功能的解析器 -->
	<bean id="multipartResolver" class="upload.progress.MultipartListenerResolver" >
		<property name="maxInMemorySize" value="40960" />
		<property name="maxUploadSize" value="2147483647" />
		<property name="resolveLazily" value="false" />
		<property name="defaultEncoding"><value>UTF-8</value></property> 
	</bean>
	<!-- mvc配置 -->
	<!-- 启动Springmvc注解驱动 -->
	<mvc:annotation-driven/>
 	<!-- 返回json 方法一 需要导入 fastjson.jar包 -->  
	<mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>application/json;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
		            <list>
		               <!-- 输出key时是否使用双引号 -->
		               <value>QuoteFieldNames</value>
		               <!-- 是否输出值为null的字段 -->
		               <!-- <value>WriteMapNullValue</value> -->
		               <!-- 数值字段如果为null,输出为0,而非null -->
		               <value>WriteNullNumberAsZero</value>
		               <!-- List字段如果为null,输出为[],而非null -->
		               <value>WriteNullListAsEmpty</value>
		               <!-- 字符类型字段如果为null,输出为"",而非null -->
		               <value>WriteNullStringAsEmpty</value>
		               <!-- Boolean字段如果为null,输出为false,而非null -->
		               <value>WriteNullBooleanAsFalse</value>
		               <!-- null String也要输出  -->
		               <!-- <value>WriteMapNullValue</value> -->
		               <!-- Date的日期转换器 -->
		               <value>WriteDateUseDateFormat</value>
		            </list>
         		</property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
	 <!-- 拦截器  -->
    <mvc:interceptors>
    	<!-- 
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="interceptor.RequestTypeInterceptor"></bean>
        </mvc:interceptor>
         -->
         <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/get/createVerifyCode"/>
            <mvc:exclude-mapping path="/get/getUserAccount"/>
            <mvc:exclude-mapping path="/user/login"/>
            <mvc:exclude-mapping path="/user/loginOut"/>
            <bean class="interceptor.LoginInterceptor"></bean>
        </mvc:interceptor> 
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="interceptor.AuthorityInterceptor"></bean>
        </mvc:interceptor> 
    </mvc:interceptors>
    <!-- 
    	改为在web.xml设置
    <mvc:resources location="/upload/" mapping="/upload/**"/> 
	<mvc:resources location="/download/" mapping="/download/**"/> 
	<mvc:resources location="/prints/" mapping="/prints/**"/> 
     -->
	<!-- 如果是前后台物理分离时，以下配置可以删除 -->
	<!-- 	
	<mvc:resources location="/images/" mapping="/images/**"/> 
	<mvc:resources location="/" mapping="/**/*.html"/>
	<mvc:resources location="/" mapping="/**/*.js"/>
	<mvc:resources location="/" mapping="/**/*.css"/>
    -->
   
   
    <!-- 返回json 方法二 需要导入 jackson-annotations.jar,jackson-core.jar,jackson-databind.jar 
   <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                            <value>text/html; charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean> 
    --> 

</beans>
